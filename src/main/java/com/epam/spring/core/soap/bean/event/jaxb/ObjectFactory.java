//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.18 at 10:48:03 AM MSK 
//


package com.epam.spring.core.soap.bean.event.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import com.epam.spring.core.soap.bean.event.GetEventByIdRequest;
import com.epam.spring.core.soap.bean.event.GetEventByIdResponse;
import com.epam.spring.core.soap.bean.event.GetEventByNameRequest;
import com.epam.spring.core.soap.bean.event.GetEventByNameResponse;
import com.epam.spring.core.soap.bean.event.GetEventsRequest;
import com.epam.spring.core.soap.bean.event.GetEventsResponse;
import com.epam.spring.core.soap.bean.event.RemoveEventRequest;
import com.epam.spring.core.soap.bean.event.SaveEventRequest;

import generated.DomainObject;
import generated.Event;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Event_QNAME = new QName("", "event");
    private final static QName _DomainObject_QNAME = new QName("", "domainObject");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GetEventsRequest }
     * 
     */
    public GetEventsRequest createGetEventsRequest() {
        return new GetEventsRequest();
    }

    /**
     * Create an instance of {@link GetEventsResponse }
     * 
     */
    public GetEventsResponse createGetEventsResponse() {
        return new GetEventsResponse();
    }

    /**
     * Create an instance of {@link Event }
     * 
     */
    public Event createEvent() {
        return new Event();
    }

    /**
     * Create an instance of {@link SaveEventRequest }
     * 
     */
    public SaveEventRequest createSaveEventRequest() {
        return new SaveEventRequest();
    }

    /**
     * Create an instance of {@link GetEventByNameRequest }
     * 
     */
    public GetEventByNameRequest createGetEventByNameRequest() {
        return new GetEventByNameRequest();
    }

    /**
     * Create an instance of {@link GetEventByIdRequest }
     * 
     */
    public GetEventByIdRequest createGetEventByIdRequest() {
        return new GetEventByIdRequest();
    }

    /**
     * Create an instance of {@link DomainObject }
     * 
     */
    public DomainObject createDomainObject() {
        return new DomainObject();
    }

    /**
     * Create an instance of {@link GetEventByIdResponse }
     * 
     */
    public GetEventByIdResponse createGetEventByIdResponse() {
        return new GetEventByIdResponse();
    }

    /**
     * Create an instance of {@link RemoveEventRequest }
     * 
     */
    public RemoveEventRequest createRemoveEventRequest() {
        return new RemoveEventRequest();
    }

    /**
     * Create an instance of {@link GetEventByNameResponse }
     * 
     */
    public GetEventByNameResponse createGetEventByNameResponse() {
        return new GetEventByNameResponse();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Event }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "event")
    public JAXBElement<Event> createEvent(Event value) {
        return new JAXBElement<Event>(_Event_QNAME, Event.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DomainObject }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "domainObject")
    public JAXBElement<DomainObject> createDomainObject(DomainObject value) {
        return new JAXBElement<DomainObject>(_DomainObject_QNAME, DomainObject.class, null, value);
    }

}
