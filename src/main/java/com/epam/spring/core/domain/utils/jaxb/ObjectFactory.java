//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.16 at 06:03:40 PM MSK 
//


package com.epam.spring.core.domain.utils.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import com.epam.spring.core.domain.DomainObject;
import com.epam.spring.core.domain.UserAccount;
import com.epam.spring.core.domain.event.Event;
import com.epam.spring.core.domain.user.User;

/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DomainObject_QNAME = new QName("", "domainObject");
    private final static QName _UserAccount_QNAME = new QName("", "user_account");
    private final static QName _Event_QNAME = new QName("", "event");
    private final static QName _User_QNAME = new QName("", "user");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DomainObject }
     * 
     */
    public DomainObject createDomainObject() {
        return new DomainObject();
    }

    /**
     * Create an instance of {@link Event }
     * 
     */
    public Event createEvent() {
        return new Event();
    }
    
    /**
     * Create an instance of {@link User }
     * 
     */
    public User createUser() {
        return new User();
    }

    /**
     * Create an instance of {@link UserAccount }
     * 
     */
    public UserAccount createUserAccount() {
        return new UserAccount();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DomainObject }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "domainObject")
    public JAXBElement<DomainObject> createDomainObject(DomainObject value) {
        return new JAXBElement<DomainObject>(_DomainObject_QNAME, DomainObject.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Event }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "event")
    public JAXBElement<Event> createEvent(Event value) {
        return new JAXBElement<Event>(_Event_QNAME, Event.class, null, value);
    }
    
    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserAccount }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "user_account")
    public JAXBElement<UserAccount> createUserAccount(UserAccount value) {
        return new JAXBElement<UserAccount>(_UserAccount_QNAME, UserAccount.class, null, value);
    }
    
    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link User }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "user")
    public JAXBElement<User> createUser(User value) {
        return new JAXBElement<User>(_User_QNAME, User.class, null, value);
    }

}
